var formatNumber = function (n) {
  n = n.toString()
  return n[1] ? n : '0' + n
}

var regYear = getRegExp("(y+)", "i");

/**
 * 时间戳转日期格式
 * @param timestamp 时间戳
 * @param format 时期格式。默认 yyyy-MM-dd hh:mm:ss
 * @returns {string}
 */
function dateFormat(timestamp, format) {
  if (!format) {
    format = "yyyy-MM-dd hh:mm:ss";
  }
  timestamp = parseInt(timestamp);
  // 通过getDate()方法获取date类型的时间
  var realDate = getDate(timestamp);

  function timeFormat(num) {
    return num < 10 ? '0' + num : num;
  }
  var date = [
    ["M+", timeFormat(realDate.getMonth() + 1)],
    ["d+", timeFormat(realDate.getDate())],
    ["h+", timeFormat(realDate.getHours())],
    ["m+", timeFormat(realDate.getMinutes())],
    ["s+", timeFormat(realDate.getSeconds())],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  // console.log(reg1[0]);
  if (reg1) {

    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i = 0; i < date.length; i++) {
    var k = date[i][0];
    var v = date[i][1];
    // getRegExp初始化一个正则表达式对象
    var reg2 = getRegExp("(" + k + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1 ?
        v : ("00" + v).substring(("" + v).length));
    }
  }
  return format;
}

function parseDate(fmt) {
  fmt1 = fmt.substring(0, 19);
  var reg = getRegExp("-", "g");
  fmt2 = fmt1.replace(reg, '/');
  var timestamp = getDate(fmt2).getTime();
  return timestamp;
}

function authStatus(index) {
  var str = '';
  switch (index) {
    case 0:
      str = '未认证'
      break
    case 5:
      str = '认证中'
      break
    case 10:
      str = '认证通过'
      break
    case 15:
      str = '认证未通过'
      break
    default:
      str = '未知状态'
      break
  }
  return str;
}

function cardAuthStatus(index) {
  var str = '';
  switch (index) {
    case -5:
      str = '未递交'
      break
    case 0:
      str = '申请中'
      break
    case 5:
      str = '已交换'
      break
    case 10:
      str = '驳回'
      break
    default:
      str = '未知状态'
      break
  }
  return str;
}


function indexOf(index, list) {
  return list.indexOf(index)
}

function indexOfObj(item, list) {
  for (var i = 0; i < list.length; i++) {
    if (list[i].id === item.id) {
      return i
    }
  }
  return -1
}

function zifulength(value) {
  if (!value) return '';
  if (value.length > 5) {
    return value.slice(0, 5) + '...'
  }
  return value
}

function substring(value,length) {
  if (!value) return '';
  if (value.length > length) {
    return value.slice(0, length) + '...'
  }
  return value
}


module.exports = {
  dateFormat: dateFormat,
  parseDate: parseDate,
  authStatus: authStatus,
  indexOf: indexOf,
  indexOfObj: indexOfObj,
  cardAuthStatus: cardAuthStatus,
  zifulengt: zifulength,
  substring:substring

};
